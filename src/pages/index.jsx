import Head from "next/head";
import {
  Container,
  Heading,
  Table,
  Td,
  Th,
  Tr,
  Thead,
  Tbody,
  Spinner,
  Box,
  Text,
  FormControl,
  FormLabel,
  Input,
  VStack,
  Button,
  useToast,
} from "@chakra-ui/react";
import { useFetchProducts } from "@/features/product/useFetchProducts";
import { useFormik } from "formik";
import { useMutation } from "@tanstack/react-query";
import { axiosIstance } from "@/lib/axios";

export default function Home() {
  const {
    data,
    isLoading,
    isError,
    error,
    refetch: refetchProducts,
  } = useFetchProducts();

  const toast = useToast();

  const formik = useFormik({
    initialValues: {
      name: "",
      price: parseInt(price),
      description: "",
      image: "",
    },
    onSubmit: async () => {
      const { name, price, description, image } = formik.values;

      mutate({
        name,
        price: parseInt(price),
        description,
        image,
      });

      formik.setFieldValue("name", ""),
        formik.setFieldValue("price", ""),
        formik.setFieldValue("description", ""),
        formik.setFieldValue("image", "");

      toast({
        title: "Product created successfully",
        description: "The product has been created",
        status: "success",
        duration: 5000,
        isClosable: true,
      });
    },
  });

  const { mutate } = useMutation({
    mutationFn: async () => {
      const productsResponse = await axiosIstance.post("/products", {});
      return productsResponse;
    },
    onSuccess: () => {
      refetchProducts();
    },
  });

  const handleFormInput = (event) => {
    formik.setFieldValue(event.target.name, event.target.value);
  };

  const renderProducts = () => {
    return data?.map((product) => (
      <Tr key={product.id}>
        <Td>{product.id}</Td>
        <Td>{product.name}</Td>
        <Td>{product.price}</Td>
        <Td>{product.description}</Td>
        <Td>{product.image}</Td>
      </Tr>
    ));
  };

  if (isError) return <Text>An error has occurred: {error.message}</Text>;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container>
          <Heading>Hello World</Heading>
          {isLoading ? (
            <Box textAlign="center">
              <Spinner size="xl" />
            </Box>
          ) : (
            <Table mb="6">
              <Thead>
                <Tr>
                  <Th>ID</Th>
                  <Th>Name</Th>
                  <Th>Price</Th>
                  <Th>Description</Th>
                  <Th>Image</Th>
                </Tr>
              </Thead>
              <Tbody>{renderProducts()}</Tbody>
            </Table>
          )}
          <form onSubmit={formik.handleSubmit}>
            <VStack spacing="3">
              <FormControl>
                <FormLabel>Product Name</FormLabel>
                <Input
                  onChange={handleFormInput}
                  type="text"
                  name="name"
                  value={formik.values.name}
                />
              </FormControl>
              <FormControl>
                <FormLabel>Product price</FormLabel>
                <Input
                  onChange={handleFormInput}
                  type="text"
                  name="price"
                  value={formik.values.price}
                />
              </FormControl>
              <FormControl>
                <FormLabel>Product description</FormLabel>
                <Input
                  onChange={handleFormInput}
                  type="text"
                  name="description"
                  value={formik.values.description}
                />
              </FormControl>
              <FormControl>
                <FormLabel>Product image</FormLabel>
                <Input
                  onChange={handleFormInput}
                  type="text"
                  name="image"
                  value={formik.values.image}
                />
              </FormControl>
              <Button type="submit">Add Product</Button>
            </VStack>
          </form>
        </Container>
      </main>
    </>
  );
}
